@echo off

pushd %~dp0

:: // copy ourselvees IIF endor Build
if "%3"=="endorbuild" goto ENDORBUILD
goto SKIPENDOR

:ENDORBUILD

call robocopy . %tmp%\infrabuild\ /s
pushd %tmp%\infrabuild

:SKIPENDOR

:: Clean output directories
echo *********************************************************************************
echo *
echo * Clean out output directories
echo *
echo *********************************************************************************

rmdir out /s/q
rmdir dist /s/q

echo *********************************************************************************
echo *
echo * Compile TypeScript
echo * We still do this for ModernCop...
echo *********************************************************************************

call node_modules\.bin\tsc
if errorlevel 1 goto FAIL

echo *********************************************************************************
echo *
echo * Run static analysis (tslint)
echo *
echo *********************************************************************************

call node_modules\.bin\tslint -p tsconfig.json
if errorlevel 1 goto FAIL

:: check to see if we have parameter indicating 'compile only'
if "%1"=="notest" goto SKIPTEST

:: errorlevel greater than 7 - is intentional. see
:: https://blogs.technet.microsoft.com/deploymentguys/2008/06/16/robocopy-exit-codes/
:: for more details
if errorlevel 7 goto FAIL

echo *********************************************************************************
echo *
echo * Run tests
echo *
echo *********************************************************************************

call node_modules\.bin\mocha -r ts-node/register test/**/*.spec.ts -r test/setup.js --opts ./mocha.opts
if errorlevel 1 goto FAIL

:SKIPTEST

echo *********************************************************************************
echo *
echo * Assemble with webpack
echo *
echo *********************************************************************************

if "%2"=="prodcompile" goto PRODUCTIONCOMPILE
set scriptsource=dev
goto ENDSCRIPTSELECT

:PRODUCTIONCOMPILE
set scriptsource=prod
goto ENDSCRIPTSELECT

:ENDSCRIPTSELECT

echo Using webpack.%scriptsource%.js

call node_modules\.bin\webpack --config webpack.%scriptsource%.js --progress --colors --profile --display-error-details --display-reasons --debug --display-exclude --display-chunks --display-origins
if errorlevel 1 goto FAIL

echo *********************************************************************************
echo *
echo * Copy output files
echo *
echo *********************************************************************************

:: errorlevel greater than 7 - is intentional. see
:: https://blogs.technet.microsoft.com/deploymentguys/2008/06/16/robocopy-exit-codes/
:: for more details

:COPY_FILES
:: html pages
call robocopy .\src\ .\dist\ *.html /s
if errorlevel 7 goto FAIL

:: copy map files (this brute force copy is temporary, until we include them in webpack)
call robocopy .\ext\maps\ .\dist\ /s
if errorlevel 7 goto FAIL

:: copy base libraries
call robocopy .\ext\base-libs\ .\dist\base-libs\ /s
if errorlevel 7 goto FAIL

if "%3"=="endorbuild" goto ENDORBUILDDONE

:: copy from dist to dist\web
call robocopy .\dist\ .\dist\web\ /s /xd web
if errorlevel 7 goto FAIL

call robocopy .\dist\ ..\AzureUX-Monitoring\src\MonitoringExtension\Content\iframe\infrainsights.app\containers.1.0.012970001-preview-78967d7f
if errorlevel 7 goto FAIL

goto NORMALFINISH

:ENDORBUILDDONE

popd

call robocopy %tmp%\infrabuild\dist\ .\dist\ /s
if errorlevel 7 goto FAIL

:NORMALFINISH

:: do archive creation only in prod builds
if "%2"=="prodcompile" goto CREATEARCHIVE
goto SKIPCREATEARCHIVE

echo *********************************************************************************
echo *
echo * Create output ZIP archive
echo *
echo *********************************************************************************

:CREATEARCHIVE

mkdir .\out\zip

::read version from file generated by build environment and store in 'latest version' file
::note: we need to be agnostic to encoding of the original file
powershell -ExecutionPolicy Bypass -Command "& Get-Content .version\semantic.packageversion.info | Out-File -NoNewLine -encoding ASCII .\out\zip\latest-version.txt"
if errorlevel 1 goto FAIL

::get version info into a variable
set /p BUILDNUMBER=<".\out\zip\latest-version.txt"
if errorlevel 1 goto FAIL

:: copy files from .\dist to folder ready to be compressed
call robocopy .\dist\ .\out\zip\%BUILDNUMBER%\ /s /xd bundle.analysis
if errorlevel 7 goto FAIL

:: Create additional copy of the code in 'latest' folder
:: so that version-independent access is possible in dogfood
:: Skip this step for official builds
if "%CDP_BUILD_TYPE%"=="Official" goto SKIPCREATINGLATEST

call robocopy .\dist .\out\zip\latest\ /s /xd bundle.analysis
if errorlevel 7 goto FAIL

:SKIPCREATINGLATEST

:: copy deployment-related files
call robocopy .\.deployment\ServiceGroupRoot\ .\dist\ServiceGroupRoot\ /s
if errorlevel 7 goto FAIL

:: copy versioning info
call robocopy .\.version\ .\dist\ServiceGroupRoot\ semantic.packageversion.info
if errorlevel 7 goto FAIL

:: create deployment archive
powershell -ExecutionPolicy Bypass -Command "& Compress-Archive -Force -Path .\out\zip\* -DestinationPath .\dist\ServiceGroupRoot\web.zip"
if errorlevel 1 goto FAIL

:SKIPCREATEARCHIVE

echo Build SUCCEEDED.
set exit_code=0
goto END

:FAIL
echo Build FAILED.
set exit_code=1

:END
popd
exit /b %exit_code%