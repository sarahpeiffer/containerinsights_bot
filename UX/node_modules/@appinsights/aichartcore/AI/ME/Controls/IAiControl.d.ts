import { RefreshReason, UserDataStatus } from "../Constants";
import { TimeRange } from "../MELiteShared";
import * as Interfaces from "../SharedInterfaces";
export interface IAiControl extends IAccessibleChart, IAiBaseControl {
    hoverOn(timeTick: Date, selection?: boolean): void;
    hoverOut(): void;
    changeToolTipBody(body: string): void;
    getVisualization(): Interfaces.IChartVisualization;
    setVisualization(visualization: Interfaces.IChartVisualization): void;
}
export interface IAiGridControl extends IAiBaseControl {
    getVisualization(): Interfaces.IGridVisualization;
    setVisualization(visualization: Interfaces.IGridVisualization): void;
}
export interface IAiBaseControl {
    telemetryContext: Interfaces.InsightsTelemetryContext;
    clearData(userDataStatus: UserDataStatus): void;
    updateData(data: Interfaces.ControlData, cause: RefreshReason): void;
    getTimeRange(): TimeRange;
    hideWatermark(): void;
    getUniqueId(): string;
    getVisualization(): Interfaces.IVisualization;
    setVisualization(visualization: Interfaces.IVisualization): void;
}
export interface IAccessibleChart {
    focusFirstSeries(): void;
    focusLastSeries(): void;
    focusNextSeries(): void;
    focusPrevSeries(): void;
    focusNextDataPoint(): void;
    focusPrevDataPoint(): void;
    unfocusSeries(): void;
    focusSeries(index?: number): void;
    focusDataPoint(index?: number): void;
    deselect(): void;
}
