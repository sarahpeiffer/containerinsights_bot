"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var MapppedUtils_1 = require("../../Utils/MapppedUtils");
var _flights = {};
function initialFeatureFlags(params) {
    if (params) {
        // The flight information pertinent for this iframe is appended to the url by BaseFrame
        if (params && params.featureFlags && params.featureFlags.length > 0) {
            try {
                _flights = JSON.parse(decodeURIComponent(params.featureFlags));
            }
            catch (error) {
                // Ignore invalid formatted flights
            }
        }
    }
}
exports.initialFeatureFlags = initialFeatureFlags;
function isFeatureEnabled(featureFlagName) {
    return !!_flights[featureFlagName];
}
exports.isFeatureEnabled = isFeatureEnabled;
function appendFeatureFlags(featureFlags) {
    if (featureFlags) {
        MapppedUtils_1.extend(_flights, featureFlags);
    }
}
exports.appendFeatureFlags = appendFeatureFlags;
function getFeatureFlagValue(featureFlagName) {
    return _flights[featureFlagName];
}
exports.getFeatureFlagValue = getFeatureFlagValue;
function setFeatureFlagValue(featureFlagName, value) {
    _flights[featureFlagName] = value;
}
exports.setFeatureFlagValue = setFeatureFlagValue;
var enableAILiveMetric = undefined;
function shouldEnableAILiveMetric() {
    if (enableAILiveMetric === undefined) {
        return isFeatureEnabled(exports.FeatureFlags.EnableAILiveMetric);
    }
    return enableAILiveMetric;
}
exports.shouldEnableAILiveMetric = shouldEnableAILiveMetric;
var missingDataLineStyle = undefined;
function getLineStyleForMissingValue() {
    if (missingDataLineStyle === undefined) {
        var styleVallue = getFeatureFlagValue(exports.FeatureFlags.MissingDataLineStyle);
        switch (styleVallue) {
            case "t":
                missingDataLineStyle = 1 /* Transparent */;
                break;
            case "n":
                missingDataLineStyle = 3 /* Disappearing */;
                break;
            case "s":
                // solid line
                missingDataLineStyle = 0 /* None */;
                break;
            case "d":
            default: // tslint:disable-line:no-switch-case-fall-through
                missingDataLineStyle = 2 /* DottedLine */;
                break;
        }
    }
    return missingDataLineStyle;
}
exports.getLineStyleForMissingValue = getLineStyleForMissingValue;
function getMissingValueFillType(chartType, agg) {
    var missingDataFillingType;
    var fillTypeValue = getFeatureFlagValue(exports.FeatureFlags.MissingValueFillType);
    switch (fillTypeValue) {
        case "l":
            missingDataFillingType = 3 /* FillWithLastValue */;
            break;
        case "z":
            missingDataFillingType = 1 /* FillWithZero */;
            break;
        case "m":
            missingDataFillingType = 2 /* FillWithValueInThePath */;
            break;
        case "n":
            missingDataFillingType = 0 /* NoFill */;
            break;
        case "d":
        default: // tslint:disable-line:no-switch-case-fall-through
            if (chartType === 7 /* Scatter */ || chartType === 1 /* Bar */) {
                missingDataFillingType = 1 /* FillWithZero */;
            }
            else {
                if (agg === 4 /* Avg */ || agg === 2 /* Min */ || agg === 3 /* Max */) {
                    missingDataFillingType = 2 /* FillWithValueInThePath */;
                }
                else {
                    missingDataFillingType = 1 /* FillWithZero */;
                }
            }
            break;
    }
    return missingDataFillingType;
}
exports.getMissingValueFillType = getMissingValueFillType;
exports.FeatureFlags = {
    EnableGridV2: "EnableGridV2",
    EnableAllResources: "EnableAllResourcesFeatureFlag",
    EnforceMdmFeatureFlag: "EnforceMdmFeatureFlag",
    EnableAILiveMetric: "EnableAILiveMetric",
    EnableConfigureAlerts: "EnableConfigureAlerts",
    MissingDataLineStyle: "MissingDataLineStyle",
    MissingValueFillType: "MissingValueFillType",
    YAxisPinningEnabled: "YAxisPinningEnabled",
};
//# sourceMappingURL=FeatureFlagService.js.map