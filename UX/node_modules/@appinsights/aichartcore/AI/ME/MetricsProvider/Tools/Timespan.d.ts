import { TimeRange } from "../../MELiteShared";
import { MetricTimespan } from "../../SharedInterfaces";
/**
 * Expand the timeRange based on the timeRangeCushionFactor with grain. THe passed in timeRange is expected to be snapped/alighed with the grain
 * (This method is called from providers)
 */
export declare function expandTimespan(timeRange: TimeRange, grain: string, timeRangeCushionFactor: number): TimeRange;
/**
 * Returns an absolute timespan from either an absolute or relative timespan.
 *
 * If an absolute timespan is provided, then a copy of that timespan is returned.
 *
 * If a relative timespan is provided, then an absolute timespan is created with
 * end = now and start = now - relative duration.
 */
export declare function getAbsoluteTimespan(timespan: MetricTimespan): TimeRange;
/**
 * NOTE: When converting a duration represented as a string to a number, lots of "edge" cases must be
 * considered (such as daylight savings) to make the conversion 100% accurate. However, that logic
 * does not exist in this function. Instead, the following assumptions are made:
 *
 *  - 1 year = 365 days
 *  - 1 month = 30 days
 *  - 1 week = 7 days
 */
export declare function convertIsoDurationToMs(isoDuration: string): number;
