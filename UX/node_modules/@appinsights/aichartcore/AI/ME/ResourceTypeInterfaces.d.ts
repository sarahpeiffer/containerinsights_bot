export interface SubscriptionResourceGroup {
    subscription?: string;
    resourceGroup?: string;
}
export interface ISubscriptionDescriptor {
    /**
     * The subscription ID for the resource group.
     */
    readonly subscription: string;
}
export interface IResourceGroupDescriptor extends ISubscriptionDescriptor {
    /**
     * The resource group name for the resource group.
     */
    readonly resourceGroup: string;
}
export interface IResourceManagerDescriptor {
    /**
     * The provider name for the resource.
     */
    readonly provider: string;
    /**
     * The resource name for the resource.
     */
    readonly resource?: string;
    /**
     * The resource group name for the resource group.
     */
    readonly resourceGroup?: string;
    /**
     * The subscription ID for the resource group.
     */
    readonly subscription?: string;
    /**
     * The type for the resource (this is the most nested type).
     */
    readonly type?: string;
    /**
     * The collection of types for the resource (from left-to-right from the URI).
     * This will have more than one item for nested resources, one for each level of nesting.
     */
    readonly types: ReadonlyArray<string>;
    /**
     * The collection of resource names for the resource (from left-to-right from the URI).
     * This will have more than one item for nested resources, one for each level of nesting.
     */
    readonly resources: ReadonlyArray<string>;
    /**
     * The resource map maps a partial type to a resource name.
     * For the resource ID: /subscriptions/sub123/resourceGroups/rg123/providers/prov123/type1/resource1/type2/resource2/type3/resource3
     * the map includes:
     * "prov123/type1" => resource1
     * "prov123/type1/type2" => resource2
     * "prov123/type1/type2/type3" => resource3
     */
    readonly resourceMap: StringMap<string>;
}
export interface IResourceDescriptorBase extends IResourceManagerDescriptor {
    /**
     * The resource name for the resource.
     */
    readonly resource: string;
    /**
     * The type for the resource (this is the most nested type).
     */
    readonly type: string;
}
/**
 * Subscription level resources.
 */
export interface IResourceDescriptor extends IResourceDescriptorBase, IResourceGroupDescriptor {
    /**
     * The resource group name for the resource group.
     */
    readonly resourceGroup: string;
    /**
     * The subscription ID for the resource group.
     */
    readonly subscription: string;
}
