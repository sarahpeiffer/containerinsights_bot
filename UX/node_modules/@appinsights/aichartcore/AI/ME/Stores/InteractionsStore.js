"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CallbackRegistrationMap_1 = require("../Utilities/CallbackRegistrationMap");
var InteractionsStore = /** @class */ (function () {
    function InteractionsStore(registrationMap) {
        var _this = this;
        this._registrationMap = new CallbackRegistrationMap_1.CallbackRegistrationMap();
        this.Actions = {
            OnHover: (function (data) {
                _this._executeAction(data.id, function (interaction) { interaction.OnHover(data); });
            }),
            OnLeave: (function (data) {
                _this._executeAction(data.id, function (interaction) { interaction.OnLeave(data); });
            }),
            OnLeftClick: (function (data) {
            }),
            OnRightClick: (function (data) {
            }),
            OnZoom: (function (data) {
                _this._executeAction(data.id, function (interaction) { interaction.OnZoom(data); });
            }),
        };
        if (InteractionsStore._instance) {
            throw new Error("Error: Instantiation failed: use InteractionsStore.Instance() instead of new.");
        }
        this._registrationMap = registrationMap || new CallbackRegistrationMap_1.CallbackRegistrationMap();
    }
    InteractionsStore.Instance = function (registrationMap) {
        if (!InteractionsStore._instance) {
            InteractionsStore._instance = new InteractionsStore(registrationMap);
        }
        return InteractionsStore._instance;
    };
    /**
     * reset for cleaning out global instance, ONLY use this for testing purpose
     */
    InteractionsStore._reset = function () {
        InteractionsStore._instance = null;
    };
    InteractionsStore.prototype.Register = function (chart) {
        this._registrationMap.Register(chart);
    };
    InteractionsStore.prototype.Unregister = function (chart) {
        this._registrationMap.Unregister(chart.id);
    };
    InteractionsStore.prototype._executeAction = function (id, action) {
        this._registrationMap.ExecuteAction(id, action);
    };
    InteractionsStore._instance = null;
    return InteractionsStore;
}());
exports.InteractionsStore = InteractionsStore;
//# sourceMappingURL=InteractionsStore.js.map