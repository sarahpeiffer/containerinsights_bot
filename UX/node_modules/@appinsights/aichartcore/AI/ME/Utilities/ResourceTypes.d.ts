import { IMetricsExplorerItemDataModel, InsightsTelemetryContext, MetricId, Namespace } from "../SharedInterfaces";
export declare const legacyNamespacesMap: Readonly<StringMap<boolean>>;
export declare function getSubscriptionId(resourceId: string): string;
export declare function getResourceName(resourceId: string): string;
/**
 * Return the default namespaces for a resource.
 */
export declare function getDefaultNamespaces(resourceId: string): ReadonlyArray<Namespace>;
/**
 * Builds a resource type from a resource ID.
 * Taken from Shell 8/14/2018.
 */
export declare function getResourceProvider(resourceId: string): string;
export declare function isValidResourceid(resourceId: string, telemetryContext?: InsightsTelemetryContext): boolean;
export declare function isAILiveMetric(metric: MetricId): boolean;
export declare function isAILiveChart(dm: IMetricsExplorerItemDataModel): boolean;
export declare function isAIMetric(metric: MetricId): boolean;
export declare function isMetricLegacy(metricId: MetricId): boolean;
export declare function getMetricBackendProviderType(metric: MetricId): "AI" | "Legacy" | "MDM";
export declare function isMdmClassicVMMetric(metricName: string): boolean;
