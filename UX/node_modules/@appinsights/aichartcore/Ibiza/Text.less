// stylelint-disable

// Taken from Ibiza source on 3/28/2017
// NOTE: When updating this file, please update the timestamp above.

@import "Color.less";
@import "Font.less";

//
//  Text formats
//  Predefined text mixins shows comments representing designer nomenclature and variants.
//

.fx-text-internal(regular, @fontSize, @lineHeight)   { .fx-font(); }
.fx-text-internal(bold, @fontSize, @lineHeight)      { .fx-font-bold(); }
.fx-text-internal(semibold, @fontSize, @lineHeight)  { .fx-font-semibold(); }
.fx-text-internal(light, @fontSize, @lineHeight)     { .fx-font-light(); }
.fx-text-internal(semilight, @fontSize, @lineHeight) { .fx-font-semilight(); }
.fx-text-internal(monospace, @fontSize, @lineHeight) { .fx-font-monospace(); }
.fx-text-internal-lastlinefix(regular, @fontSize, @lineHeight, @paddingBottom)   { .fx-font(); }
.fx-text-internal-lastlinefix(bold, @fontSize, @lineHeight, @paddingBottom)      { .fx-font-bold(); }
.fx-text-internal-lastlinefix(semibold, @fontSize, @lineHeight, @paddingBottom)  { .fx-font-semibold(); }
.fx-text-internal-lastlinefix(light, @fontSize, @lineHeight, @paddingBottom)     { .fx-font-light(); }
.fx-text-internal-lastlinefix(semilight, @fontSize, @lineHeight, @paddingBottom) { .fx-font-semilight(); }
.fx-text-internal-lastlinefix(monospace, @fontSize, @lineHeight, @paddingBottom) { .fx-font-monospace(); }

// Helper method.
// Prefer the predefined text mixins first.
// The guards ensure that the method is called with a familyType set. This prevents unintentional misspellings that would still be handled by LESS.
.fx-text-internal(@familyType, @fontSize, @lineHeight) when (@familyType = regular), (@familyType = bold), (@familyType = semibold), (@familyType = light), (@familyType = semilight), (@familyType = monospace) and (ispixel(@fontSize)) {
  font-size: @fontSize;
  line-height: @lineHeight;
}

// Elements of text where the line-height value causes cut offs.
//
// Cut offs occur when the box is 'overflow: hidden' and the line-height value is too small to allow
// some lowercase characters (like g/j/p/q) to show completely.
// This adds a padding-bottom to allow the cut off part to show on the last line of text.
//
// Cut offs don't occur when using uppercase characters or numbers only. Prefer the non corrected method in those instances.
.fx-text-internal-lastlinefix(@familyType, @fontSize, @lineHeight, @paddingBottom) when (@familyType = regular), (@familyType = bold), (@familyType = semibold), (@familyType = light), (@familyType = semilight), (@familyType = monospace) and (ispixel(@fontSize)) and (ispixel(@paddingBottom)) {
  .fx-text-internal(@familyType, @fontSize, @lineHeight);

  padding-bottom: @paddingBottom;
}

// H1
.fx-text-header() {
  .fx-text-internal(semibold, 14px, 17px);
}

.fx-text-header-lastlinefix() {
  .fx-text-internal-lastlinefix(semibold, 14px, 17px, 1px);
}

// H2
// Use @Color_SlateTints_G04 for Mini Tile Header
// Use @Color_SlateTints_G10 for Tile SubHeader
// Use @Color_SlateTints_G04 for blade sub header
.fx-text-subheader() {
  .fx-text-internal(semibold, 10px, 10px);

  text-transform: uppercase;
}

// Blade Head
// Use @Color_SlateTints_G04 for Blade Header
// Use @Color_SlateTints_G06 for Text Header
// Use @Color_Palette_C01 for Hub Header
.fx-text-header-large() {
  .fx-text-internal(semilight, 22px, 28px);
}

// Copy - paragraph
// Use @Color_SlateTints_G13 for Hub paragraph text
// Use @Color_Palette_C01 for Hub links
.fx-text-regular() {
  .fx-text-internal(regular, 12px, 18px);
}

.fx-text-regular-lastlinefix() {
  .fx-text-internal-lastlinefix(regular, 12px, 18px, 2px);
}

// Copy - list
.fx-text-regular-list() {
  .fx-text-internal(regular, 12px, 30px);
}

// Metric
// Use @Color_SlateTints_G04 for metric labels
// Use @Color_SlateTints_G13 for Hub timestamps
.fx-text-label() {
  .fx-text-internal(regular, 12px, normal);
}

// Button text
// Use @Color_Palette_C01 for blue background button
// Use @Color_Palette_C02 for white background button
.fx-text-button() {
  .fx-font-semibold();

  font-size: 13px;
}


//
//  Numbers and adornment text formatting
//
.fx-number-common(@fontSize, @tracking) when (ispixel(@fontSize)) and (isem(@tracking)) {
  .fx-font-semibold();

  font-size: @fontSize;
  line-height: @fontSize;
  letter-spacing: @tracking;
}

.fx-number-adorn-common(@fontSize, @tracking) when (ispixel(@fontSize)) and (isem(@tracking)) {
  .fx-font-bold();

  font-size: @fontSize;
  line-height: @fontSize;
  letter-spacing: @tracking;
}

.fx-number-jumbo() {
  .fx-number-common(60px, -0.02em);
}

.fx-number-large() {
  .fx-number-common(43px, -0.02em);
}

.fx-number-medium() {
  .fx-number-common(30px, -0.025em);
}

.fx-number-small() {
  .fx-number-common(17px, -0.02em);
}

.fx-number-jumbo-adorn() {
  .fx-number-adorn-common(20px, -0.02em);
}

.fx-number-large-adorn() {
  .fx-number-adorn-common(15px, -0.02em);
}

.fx-number-medium-adorn() {
  // same as large
  .fx-number-large-adorn();
}

.fx-number-small-adorn() {
  .fx-number-adorn-common(10px, -0.05em);
}
