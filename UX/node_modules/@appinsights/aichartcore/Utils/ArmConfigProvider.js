"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Constants_1 = require("../AI/ME/Constants");
var ServiceContainer_1 = require("../AI/ME/ServiceContainer");
var ArmHostMapping = {
    "dogfood": "api-dogfood.resources.windows-int.net",
    "ppe": "management.azure.com",
    "aimon": "management.azure.com",
    "prod": "management.azure.com",
    "ff": "management.usgovcloudapi.net",
    "bf": "management.microsoftazure.de",
    "mc": "management.chinacloudapi.cn",
};
var InsightsHostMapping = {
    "aimon": "mscompute2.iaas.ext.azure.com",
    "prod": "mscompute2.iaas.ext.azure.com",
    "ff": "mscompute-main.iaas.ext.azure.us",
    "bf": "mscompute-main.iaas.ext.microsoftazure.de",
    "mc": "mscompute-main.iaas.ext.azure.cn",
};
var environmentName;
function GetArmEndpoint() {
    HydrateEnvironmentName();
    return "https://" + ArmHostMapping[environmentName];
}
exports.GetArmEndpoint = GetArmEndpoint;
function GetLegacyEndpoint() {
    HydrateEnvironmentName();
    return "https://" + InsightsHostMapping[environmentName];
}
exports.GetLegacyEndpoint = GetLegacyEndpoint;
function HydrateEnvironmentName() {
    if (!environmentName) {
        var environment = ServiceContainer_1.ServiceContainer.Instance().get(Constants_1.TypeNames.EnvironmentName);
        environmentName = environment ? environment.toLowerCase() : "prod";
    }
}
// This is used by unit test only
function setEnvironmentName(envName) {
    environmentName = envName;
}
exports.setEnvironmentName = setEnvironmentName;
//# sourceMappingURL=ArmConfigProvider.js.map