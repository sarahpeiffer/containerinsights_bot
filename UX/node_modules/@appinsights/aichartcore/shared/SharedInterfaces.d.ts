import { ChartTypes } from "../AI/ME/Constants";
import { TimeRange } from "../AI/ME/MELiteShared";
import { IRegistrationInfo, MetricSeriesAndSummary } from "../AI/ME/SharedInterfaces";
export interface IPortalMessageSubscriber {
    Unsubscribe(): void;
}
export interface IPortalMessageService {
    SubscribeMessage(kind: string, subscriber: Function): IPortalMessageSubscriber;
    PostMessage(kind: string, data?: any, lclWindow?: Window): void;
    PostMessageWithNoInstanceId(kind: string, data?: any): void;
}
export interface ISharedTelemetryService {
    LogEvent(name: string, customProperties?: any, customMetrics?: any): void;
    LogException(exception: Error, handledAt?: string, customProperties?: any, customMetrics?: any): void;
    Register(messageSvc: IPortalMessageService, messageName: string): IPortalMessageSubscriber;
    LogTrace(message: string, customProperties?: any): void;
}
export declare const enum ExportType {
    None = 0,
    Excel = 1
}
export interface ExportData {
    data: MetricSeriesAndSummary[][];
    metadata: ExportMetadata;
}
export interface ExportMetadata {
    chartTitle: string;
    metrics: string[];
    startTime: string;
    endTime: string;
    exportType: ExportType;
    timeGrain: string;
    filters: string;
    aggregation: string;
    grouping: string;
    viewportTimeRange: TimeRange;
    chartType?: ChartTypes;
}
export interface IExportInteractions {
    OnExport?: (data: IExportActionData) => ExportData[];
}
export interface IExportHandler {
    OnExport?: () => ExportData;
}
export interface IExportRegistration extends IExportHandler {
    id: string;
}
export interface IExportActionData extends IRegistrationInfo {
    exportType: ExportType;
}
