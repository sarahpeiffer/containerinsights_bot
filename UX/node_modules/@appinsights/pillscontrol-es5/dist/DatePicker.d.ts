import * as React from "react";
import { Validation } from "./CommonInterfaces";
import "./Styles/Date-picker";
import "pikaday/css/pikaday.css";
export interface DatePickerProps {
    isStartTime: boolean;
    selected: Date;
    validation: Validation;
    onChange: (date: Date, isValidDate: boolean) => void;
    showUTC: boolean;
}
export interface DatePickerTimeState {
    currentDate: Date;
    isValidDate: boolean;
    dateValue: string;
    timeValue: string;
}
export interface DatePickerState extends DatePickerTimeState {
    isDateFocused: boolean;
    isTimeFocused: boolean;
    visibility: boolean;
}
export declare class DatePicker extends React.Component<DatePickerProps, DatePickerState> implements React.ComponentLifecycle<DatePickerProps, DatePickerState> {
    static defaultProps: DatePickerProps;
    private _picker;
    private _dateBox;
    private _button;
    private _pickerVisible;
    constructor(props: DatePickerProps);
    /** Helper function that gets around broken "contains" method
     * Root cause is "psuedo-elements" not having parents
     */
    private _hasParent;
    /** This manages the textbox focus highlighting even when
     * interacting with the calendar instead of the textbox.
     * It also manages closing the calendar if anything but the calendar is clicked.
     */
    private _onMouseDown;
    private _hidePicker;
    private _showPicker;
    private _togglePicker;
    private _handleClickOutside;
    componentDidMount(): void;
    componentWillReceiveProps(nextProps: Readonly<DatePickerProps>, nextContext: any): void;
    private _onDateClicked;
    private _onTimeClicked;
    private _onDateBlur;
    private _onTimeBlur;
    private _updateDate;
    private _onOpenCalendar;
    private onSelected;
    private onManualTimeChange;
    private onManualDateChange;
    private onManualChange;
    private onChange;
    private onDateValueChange;
    private onTimeValueChange;
    componentWillUnmount(): void;
    render(): JSX.Element;
}
