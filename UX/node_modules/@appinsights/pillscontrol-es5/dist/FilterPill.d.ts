import * as React from "react";
import * as Select from "@appinsights/react-select";
import { FilterSelection, FilterPillProps, FilterOption } from "./FilterPillData";
import "@appinsights/react-select/dist/react-select.css";
import "./Styles/DropdownPill";
export interface FilterPillState {
    valuesList: FilterOption[];
    selection: FilterSelection;
    lkgSelection: FilterSelection;
    menuRenderer: (props: Select.MenuRendererProps) => Select.HandlerRendererResult;
}
export declare enum SelectionChangeType {
    None = 0,
    Dimension = 1,
    Operator = 2,
    Values = 3
}
export declare class FilterPill extends React.Component<FilterPillProps, FilterPillState> {
    private static globalInstanceIndex;
    private readonly _instanceIndex;
    private _dimensionRef;
    private _operatorRef;
    private _valuesRef;
    private _shouldExpandDropdowns;
    constructor(props?: FilterPillProps, context?: any);
    componentWillMount(): void;
    componentWillReceiveProps(nextProps: Readonly<FilterPillProps>, nextContext: any): void;
    render(): JSX.Element;
    protected renderDropdowns(): JSX.Element;
    protected renderCollapsed(): JSX.Element;
    protected renderDropdownWithLabel(dropdownFn: JSX.Element, label: string, labelName: string): JSX.Element;
    protected renderDimensionDropdown(uniqueId?: string): JSX.Element;
    protected renderOperatorDropdown(uniqueId?: string): JSX.Element;
    protected renderValuesDropdown(uniqueId?: string): JSX.Element;
    protected updateAriaLabel(selection: FilterSelection): void;
    private _handleSelectionChange;
    private _getSelectionString;
    private _getSelectedValuesString;
    private _isConfigured;
    private _hasSelection;
    private _autoExpandDropdowns;
}
