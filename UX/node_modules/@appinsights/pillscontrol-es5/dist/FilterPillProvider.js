"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react"); // tslint:disable-line:no-unused-variable
/**
 * Creates the IPillContentProvider for creating FilterPill components.
 */
function getFilterContentProvider(contentProps) {
    var pillContent = {
        createContent: function (editMode, props, updateConfiguredStatus, updateAriaLabel, editingComplete, removeSelf) {
            return Promise.resolve().then(function () { return require(/* webpackMode: "lazy", webpackChunkName: "FilterPill" */ "./FilterPill"); }).then(function (FilterPill) {
                return React.createElement(FilterPill.FilterPill, { editMode: editMode, disableEdit: props.disableEdit, enableValueMultiSelect: props.enableValueMultiSelect, hideOperatorSelection: props.hideOperatorSelection, areDimensionsLoading: props.areDimensionsLoading, areOperatorsLoading: props.areOperatorsLoading, areValuesLoading: props.areValuesLoading, pickerLists: props.pickerLists, selection: props.selection, onSelectionChange: props.onSelectionChange, showLabels: props.showLabels, canCreateValueEntries: props.canCreateValueEntries, valueEntryCreatorPromptTextFormat: props.valueEntryCreatorPromptTextFormat, autoOpen: props.autoOpen, customOptionRenderers: props.customOptionRenderers, customValueRenderers: props.customValueRenderers, updateConfiguredStatus: updateConfiguredStatus, updateAriaLabel: updateAriaLabel, removeSelf: removeSelf });
            });
        },
        contentProps: contentProps,
    };
    return pillContent;
}
exports.getFilterContentProvider = getFilterContentProvider;
//# sourceMappingURL=FilterPillProvider.js.map