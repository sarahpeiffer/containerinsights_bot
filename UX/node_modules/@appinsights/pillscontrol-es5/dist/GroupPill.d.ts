import * as React from "react";
import * as Select from "@appinsights/react-select";
import { GroupOption, GroupPillProps, GroupSelection } from "./GroupPillData";
import { Validation } from "./CommonInterfaces";
import "@appinsights/react-select/dist/react-select.css";
import "./Styles/GroupPill";
import "./Styles/DropdownPill";
import "./Styles/TextPill";
export interface GroupPillState {
    valuePickerList: GroupOption[];
    limitValue: number;
    groupPillValidation?: Validation;
    menuRenderer: (props: Select.MenuRendererProps) => Select.HandlerRendererResult;
}
export declare class GroupPill extends React.Component<GroupPillProps, GroupPillState> {
    private static globalInstanceIndex;
    private readonly _instanceIndex;
    private _valueRef;
    private _shouldExpandDropdowns;
    constructor(props?: GroupPillProps, context?: any);
    componentWillMount(): void;
    componentWillReceiveProps(nextProps: Readonly<GroupPillProps>, nextContext: any): void;
    render(): JSX.Element;
    protected renderDropdowns(): JSX.Element;
    protected renderCollapsed(): JSX.Element;
    protected showValueCollapsed(): boolean;
    protected showLimitCollapsed(): boolean;
    protected showSortCollapsed(): boolean;
    protected renderDropdownWithLabel(dropdownFn: JSX.Element, label: string, isValid?: boolean): JSX.Element;
    renderLimitTextboxWithLabel(label?: string, isValid?: boolean): JSX.Element;
    private _onChangeValue;
    protected renderValuesDropdown(): JSX.Element;
    protected renderSortDropdown(): JSX.Element;
    protected updateAriaLabel(selection: GroupSelection, limit: number, nextProps?: Readonly<GroupPillProps>): void;
    private _handleSelectionChange;
    private _isConfigured;
    private _getSelectionString;
    private _autoExpandDropdowns;
}
