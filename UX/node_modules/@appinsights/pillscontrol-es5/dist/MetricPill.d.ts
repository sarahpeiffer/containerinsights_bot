import * as React from "react";
import { MetricSelection, MetricPillProps, MetricOption } from "./MetricPillData";
import "@appinsights/react-select/dist/react-select.css";
import "./Styles/MetricPill";
import "./Styles/DropdownPill";
export interface MetricPillState {
    selection: MetricSelection;
    metricList: MetricOption[];
    areNamespacesLoading: boolean;
    areMetricsLoading: boolean;
    areAggregationsLoading: boolean;
}
export declare class MetricPill extends React.Component<MetricPillProps, MetricPillState> {
    static defaultProps: Partial<MetricPillProps>;
    private static globalInstanceIndex;
    private readonly _instanceIndex;
    private _namespaceRef;
    private _metricRef;
    private _aggRef;
    private _shouldExpandDropdowns;
    constructor(props?: MetricPillProps, context?: any);
    componentWillMount(): void;
    componentWillReceiveProps(nextProps: Readonly<MetricPillProps>, nextContext: any): void;
    render(): JSX.Element;
    protected renderDropdowns(): JSX.Element;
    protected renderCollapsed(): JSX.Element;
    protected renderDropdownWithLabel(DropdownFn: JSX.Element, label: string, labelName: string): JSX.Element;
    protected renderResourceButton(): JSX.Element;
    private renderNamespaceDropdownWithLabel;
    private getSimpleLabel;
    private renderDropdownWithLabelElement;
    private _handleResourceTabKey;
    protected renderNamespaceDropdown(uniqueId?: string): JSX.Element;
    protected renderMetricDropdown(uniqueId?: string): JSX.Element;
    protected renderAggregationDropdown(uniqueId?: string): JSX.Element;
    private _onOpen;
    protected updateAriaLabel(selection: MetricSelection): void;
    private _handleSelectionChange;
    private _getSelectionString;
    private _getSelectedAggregationString;
    private _isConfigured;
    private _autoExpandDropdowns;
}
