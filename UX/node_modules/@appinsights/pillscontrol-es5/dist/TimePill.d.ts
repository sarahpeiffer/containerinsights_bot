import * as React from "react";
import { TimeData, TimeGrains, TimeValues } from "./TimeInterfaces";
import { Validation } from "./CommonInterfaces";
import { TimePillProps } from "./TimePillData";
import "./Styles/TimePill";
export interface TimePillState {
    editTimeData: TimeData;
    supportedTimes: TimeValues[];
    supportedGrains: TimeGrains[];
    isValidTime: boolean;
    startTimeValidation: Validation;
    endTimeValidation: Validation;
}
export declare class TimePill extends React.Component<TimePillProps, TimePillState> {
    private _timeValRefs;
    private _timeZoneRefs;
    private _firstElement;
    private _lastElement;
    constructor(props?: TimePillProps, context?: any);
    componentWillMount(): void;
    componentWillReceiveProps(nextProps: Readonly<TimePillProps>, nextContext: any): void;
    private _validateAndChangeCustomTime;
    private _onCustomTimeChange;
    render(): JSX.Element;
    protected updateAriaLabel(timeData: TimeData): void;
    private _getDisplayString;
    private _getTimeOptionTableRows;
    private _createTimeRadio;
    private _createRadio;
    private _createOptionsUI;
    private _getDefaultSupportedTimeGrains;
    private _onDialogKeyDown;
    private _onTimeValueKeyUp;
    private _onTimeZoneKeyUp;
    private _handleTimeValueChange;
    private _handleApply;
    private _commitEdit;
    private _handleCancel;
    private _cancelEdit;
    private _handleGrainSelection;
    private _handleTimeZoneValueChange;
    private _hasChanged;
}
export declare function getDefaultSupportedTimes(): TimeValues[];
