import { IPillContentConfig } from "./IPillContent";
import { RangeValidation } from "./CommonInterfaces";
import { TimeData, TimeDataAbsolute, TimeGrains, TimeValues } from "./TimeInterfaces";
export interface TimePillConfigData extends IPillContentConfig {
    timeData: TimeData;
    /**
     * Standard Last XX times values that should be displayed.
     * Displays all supported times if undefined.
     */
    supportedTimes?: TimeValues[];
    /**
     * Configuration for time grain (time period/ interval) settings.
     * Undefined shows time grain selection with all available options.
     */
    timeGrainOptions?: TimeGrainOptions;
    /**
     * Time zone selection gives the user the ability to choose between showing time in
     * UTC or local time. True hides the control.
     */
    disableZoneSelection?: boolean;
    /**
     * Bitwise mask to determine how to display the time data. By default, this is set to Time only.
     */
    displayAs?: TimeDisplayOptions;
    /**
     * Allows for custom validation
     */
    customTimeValidator?: (time: TimeDataAbsolute, startChanged?: boolean) => RangeValidation;
}
export interface TimePillConfig extends TimePillConfigData {
    /**
     * Callback that notifies control consumer that the pill time value has been changed by the user.
     * Pill expectes the pill control consumer to update the timeData property with the new timeData.
     */
    onTimeUpdated(timeData: TimeData): void;
}
export interface TimeGrainOptions {
    /**
     * Disables time grain selection if set to true.
     */
    disableTimeGrainSelection?: boolean;
    /**
     * Time grain options shown in the drop down menu.
     * Displays all supported time grains if undefined.
     */
    supportedTimeGrains?: TimeGrains[];
}
export interface TimePillProps extends TimePillConfig {
    editMode: boolean;
    updateConfiguredStatus: (configured: boolean) => void;
    updateAriaLabel: (newLabel: string) => void;
    editingComplete: () => void;
}
/** Note: this is a bitwise mask, not standard enum */
export declare enum TimeDisplayOptions {
    /** Displays the time */
    Time = 1,
    /** Displays the configured time grain  */
    Grain = 2,
    /** Displays the configured time zone (local vs UTC) */
    Zone = 4,
    /** Displays the "Time range:" title, will not work if Zone is set */
    Title = 8
}
