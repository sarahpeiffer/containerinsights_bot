var AccessibilityUtils = /** @class */ (function () {
    function AccessibilityUtils() {
    }
    /* Augment properties of any clickable element to make it accessible for keyboard-only users */
    AccessibilityUtils.getAccessibilityProps = function (props) {
        var ref = typeof props.ref !== 'string' ? props.ref : null;
        var keyPress = props.onKeyPress;
        props.ref = function (e) {
            if (e && e.setAttribute) {
                e.setAttribute('focusable', 'true');
            }
            if (ref) {
                ref(e);
            }
        };
        props.tabIndex = props.tabIndex || 0;
        props.onKeyPress = function (e) {
            if (keyPress) {
                keyPress(e);
            }
            if (props.onClick) {
                AccessibilityUtils.onClickToOnKeyPress(props.onClick)(e);
            }
        };
        return props;
    };
    /**
     * Polyfill for focus when you need to focus on an SVG element because IE and Edge are so broken.
     */
    AccessibilityUtils.focusSvg = function (svg) {
        if (svg && svg.focus) {
            svg.focus();
        }
        else if (svg) {
            // Internet Explorer and Edge why are you like this? :'(
            var input = document.createElement('input');
            var foreign = document.createElementNS('http://www.w3.org/2000/svg', 'foreignObject');
            foreign.appendChild(input);
            svg.appendChild(foreign);
            input.focus();
            input.disabled = true;
            svg.removeChild(foreign);
        }
    };
    /* Use this onKeyPress event handler for anchors with onClick events to make the click event accessible for keyboard-only users */
    AccessibilityUtils.onClickToOnKeyPress = function (onClick) {
        return function (e) {
            if ((e.key === 'Enter' || e.key === ' ')) {
                e.preventDefault();
                e.stopPropagation();
                try {
                    onClick(new MouseEvent('click'));
                }
                catch (e) {
                    // Phantom doesn't seem to support this?
                    var evt = document.createEvent('MouseEvent');
                    evt.initEvent('click', true, true);
                    onClick(evt);
                }
            }
        };
    };
    AccessibilityUtils.getRandomElementId = function () {
        return "aria-" + Math.floor(Math.random() * 1000);
    };
    return AccessibilityUtils;
}());
export { AccessibilityUtils };
//# sourceMappingURL=AccessibilityUtils.js.map