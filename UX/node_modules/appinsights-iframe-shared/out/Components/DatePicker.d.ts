/// <reference types="react" />
/// <reference types="pikaday" />
import * as React from 'react';
import * as Pikaday from 'pikaday';
export interface DatePickerProps {
    title: string;
    selected: Date;
    validation: {
        isValid: boolean;
        reason?: string;
    };
    onChange: (date: Date) => void;
    onFocus?: () => void;
}
export interface DatePickerState {
    isFocused: boolean;
    currentDate: Date;
}
export declare class DatePicker extends React.Component<DatePickerProps, DatePickerState> implements React.ComponentLifecycle<DatePickerProps, DatePickerState> {
    static defaultProps: DatePickerProps;
    picker: Pikaday;
    box: HTMLInputElement;
    button: HTMLDivElement;
    validationBoxDomElement: HTMLElement;
    format: string;
    pickerVisible: boolean;
    onMouseDown: (e: MouseEvent) => void;
    constructor(props: DatePickerProps);
    hidePicker(): void;
    showPicker(): void;
    togglePicker(): void;
    componentWillUpdate(nextProps: DatePickerProps, nextState: DatePickerState): void;
    componentDidMount(): void;
    onClicked(e: React.MouseEvent<HTMLDivElement>): void;
    onOpen(): void;
    updateStateWithDate(state: DatePickerState, date: Date): DatePickerState;
    onSelected(date: Date): void;
    onManualDateChange(e: React.FormEvent<HTMLInputElement>): void;
    onChange(): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
}
