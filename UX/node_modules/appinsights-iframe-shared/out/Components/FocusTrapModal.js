import * as tslib_1 from "tslib";
import * as React from 'react';
var FocusTrapModal = /** @class */ (function (_super) {
    tslib_1.__extends(FocusTrapModal, _super);
    function FocusTrapModal(props) {
        var _this = _super.call(this, props) || this;
        _this._ref = function (e) { return _this._modal = e; };
        _this._focusin = _this.focusin.bind(_this);
        return _this;
    }
    FocusTrapModal.prototype.render = function () {
        return React.createElement("div", { className: 'focus-trap-modal', ref: this._ref }, this.props.children);
    };
    FocusTrapModal.prototype.componentDidMount = function () {
        document.addEventListener('focusin', this._focusin);
        this._previouslyFocused = this._activeElement();
    };
    FocusTrapModal.prototype.componentWillUnmount = function () {
        document.removeEventListener('focusin', this._focusin);
    };
    FocusTrapModal.prototype.focusin = function (e) {
        if (this._modal && !this._modal.contains(e.target) && this._modal.contains(this._previouslyFocused) &&
            typeof this._previouslyFocused.focus === 'function') {
            this._previouslyFocused.focus();
        }
        this._previouslyFocused = this._activeElement();
    };
    FocusTrapModal.prototype._activeElement = function () {
        return document.activeElement;
    };
    return FocusTrapModal;
}(React.Component));
export { FocusTrapModal };
//# sourceMappingURL=FocusTrapModal.js.map