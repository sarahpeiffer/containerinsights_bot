/* tslint:disable */
import * as React from 'react';
/* tslint:enable */
import { ComboBoxHeader } from './ComboBoxHeader';
import { TestUtilities } from '../../TestUtilities';
var ComboBoxHeaderBuilder = /** @class */ (function () {
    function ComboBoxHeaderBuilder() {
        this.props = {
            displayName: 'display name',
            icon: React.createElement("div", null)
        };
    }
    ComboBoxHeaderBuilder.prototype.build = function () {
        return ComboBoxHeader(this.props);
    };
    return ComboBoxHeaderBuilder;
}());
describe('ComboBoxHeader', function () {
    var builder;
    beforeEach(function () {
        builder = new ComboBoxHeaderBuilder();
    });
    it('should have an icon', function () {
        var header = builder.build();
        var icon = TestUtilities.FindSingle(header, function (t) { return t.props.className.indexOf('dropdown-icon') >= 0; });
        expect(icon).not.toBeNull();
        expect(icon.type).toBe('span');
        expect(icon.props.children).toBe(builder.props.icon);
    });
    it('should show current text', function () {
        var header = builder.build();
        var text = TestUtilities.FindSingle(header, function (t) { return t.props.className === 'dropdown-current'; });
        expect(text).not.toBeNull();
        expect(text.props.children).toBe(builder.props.displayName);
        expect(text.type).toBe('span');
    });
});
//# sourceMappingURL=ComboBoxHeader.spec.js.map