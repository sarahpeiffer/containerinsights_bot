import * as tslib_1 from "tslib";
import * as React from 'react';
var MenuItemCommonProps = /** @class */ (function () {
    function MenuItemCommonProps() {
    }
    return MenuItemCommonProps;
}());
export { MenuItemCommonProps };
var MenuItemProps = /** @class */ (function (_super) {
    tslib_1.__extends(MenuItemProps, _super);
    function MenuItemProps() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return MenuItemProps;
}(MenuItemCommonProps));
export { MenuItemProps };
var MenuItemSubProps = /** @class */ (function () {
    function MenuItemSubProps() {
    }
    return MenuItemSubProps;
}());
export { MenuItemSubProps };
var MenuItem = /** @class */ (function (_super) {
    tslib_1.__extends(MenuItem, _super);
    function MenuItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._onClick = _this.onClick.bind(_this);
        _this._ref = _this.ref.bind(_this);
        return _this;
    }
    MenuItem.prototype.render = function () {
        return this.props.content((_b = {
                className: 'dropdown-option',
                onMouseEnter: this.props.onHover,
                onMouseLeave: this.props.onHoverEnd,
                ref: this._ref
            },
            _b['aria-label'] = this.props.group + " " + this.props.name,
            _b.tabIndex = -1,
            _b.onClick = this._onClick,
            _b));
        var _b;
    };
    MenuItem.prototype.componentDidMount = function () {
        this.focus();
    };
    MenuItem.prototype.componentDidUpdate = function () {
        this.focus();
    };
    MenuItem.prototype.componentWillUnmount = function () {
        this.props.onHoverEnd();
    };
    MenuItem.prototype.focus = function () {
        if (this.props.index === this.props.focusIndex && this._a) {
            this._a.focus();
        }
    };
    MenuItem.prototype.ref = function (e) {
        this._a = e;
    };
    MenuItem.prototype.onClick = function (e) {
        e.stopPropagation();
        this.props.onClick();
    };
    return MenuItem;
}(React.Component));
export { MenuItem };
//# sourceMappingURL=MenuItem.js.map