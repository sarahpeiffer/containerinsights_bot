import * as tslib_1 from "tslib";
import * as React from 'react';
import { Accordion } from '../accordion';
import { InsightCard } from './InsightCard';
import { InsightCardHeader } from './InsightCardHeader';
import { Utils } from '../../Utils';
/**
 * List of insights cards that can be expanded and collapsed.
 */
var InsightsCardList = /** @class */ (function (_super) {
    tslib_1.__extends(InsightsCardList, _super);
    function InsightsCardList(props) {
        var _this = _super.call(this, props) || this;
        _this._ref = function (e) { return _this._dom = e; };
        _this.state = {};
        return _this;
    }
    InsightsCardList.prototype.render = function () {
        var cards = [];
        this.props.cards.forEach(function (card) {
            var cardId = 'insights-card-' + card.id;
            var header = card.resourcesProvider.getCardHeader();
            cards.push({
                content: React.createElement(InsightCard, { onClick: card.onClick, tooltip: card.tooltip, resourcesProvider: card.resourcesProvider }),
                heading: function (isExpanded) {
                    return React.createElement("div", { role: 'presentation' },
                        React.createElement(InsightCardHeader, { insightIcon: header.icon, isCardCollapsed: !isExpanded, isLoading: header.isLoading, loadingMessage: Utils.getString(card.resourcesProvider.strings, 'insightsCardLoadingMessage'), subTitle: header.subtitle, title: header.title }));
                },
                headingLabel: header.ariaLabel,
                id: cardId,
                isExpanded: card.isExpandedByDefault,
                forcedisExpanded: card.forceExpanded,
                props: {
                    className: 'card-accordion-header'
                }
            });
        });
        return React.createElement(Accordion, { items: cards, props: { className: 'card-list' }, ref: this._ref });
    };
    InsightsCardList.prototype.focus = function (index) {
        if (this._dom) {
            this._dom.focus(index);
        }
    };
    return InsightsCardList;
}(React.Component));
export { InsightsCardList };
//# sourceMappingURL=InsightsCardList.js.map