import * as tslib_1 from "tslib";
/* tslint:disable */
import * as React from 'react';
/* tslint:enable */
import { AutoClusterInsightCardContent } from './AutoClusterInsightCardContent';
import { CardResourcesProviderBase } from '../CardResourcesProviderBase';
import { AutoClusterSVG } from '../../../Svgs';
/**
 * Resources provider for a Autocluster insight card.
 */
var AutoClusterInsightCardResourcesProvider = /** @class */ (function (_super) {
    tslib_1.__extends(AutoClusterInsightCardResourcesProvider, _super);
    function AutoClusterInsightCardResourcesProvider(strings, autoClusterResult, telemetryType) {
        var _this = _super.call(this, strings, autoClusterResult) || this;
        _this.telemetryType = telemetryType;
        return _this;
    }
    AutoClusterInsightCardResourcesProvider.prototype.getCardHeader = function (isCollapsed, onClick) {
        return {
            title: this.getTitle(),
            icon: this.getDetectionIcon(),
            subtitle: this.getSubTitle(),
            isLoading: false,
            ariaLabel: this.getTitleText()
        };
    };
    AutoClusterInsightCardResourcesProvider.prototype.getCardContent = function () {
        return React.createElement(AutoClusterInsightCardContent, { strings: this.strings, autoClusterResult: this.detection, telemetryType: this.telemetryType });
    };
    AutoClusterInsightCardResourcesProvider.prototype.getDetectionIcon = function () {
        return React.createElement(AutoClusterSVG, null);
    };
    AutoClusterInsightCardResourcesProvider.prototype.getDegradationPercentage = function () {
        var autoClusterResult = this.detection;
        return autoClusterResult.percent.toFixed(0) + '%';
    };
    AutoClusterInsightCardResourcesProvider.prototype.getTitle = function () {
        var titleText = this.getTitleText();
        return React.createElement("div", { title: titleText }, titleText);
    };
    AutoClusterInsightCardResourcesProvider.prototype.getTitleText = function () {
        var headerStringKey = 'autoClusterCardHeaderText';
        if (Object.keys(this.strings).length && !this.strings[headerStringKey]) {
            var errMsg = "String '" + headerStringKey + "' is not defined in resources!";
            console.error(errMsg);
            throw new Error(errMsg);
        }
        var degradationPercentrage = this.getDegradationPercentage();
        var titleHeaderText = this.strings[headerStringKey];
        return degradationPercentrage + " " + titleHeaderText;
    };
    AutoClusterInsightCardResourcesProvider.prototype.getSubTitle = function () {
        var autoClusterResult = this.detection;
        var subtitleText = Object.keys(autoClusterResult.dimensions).join(', ');
        return subtitleText;
    };
    return AutoClusterInsightCardResourcesProvider;
}(CardResourcesProviderBase));
export { AutoClusterInsightCardResourcesProvider };
//# sourceMappingURL=AutoClusterInsightCardResourcesProvider.js.map