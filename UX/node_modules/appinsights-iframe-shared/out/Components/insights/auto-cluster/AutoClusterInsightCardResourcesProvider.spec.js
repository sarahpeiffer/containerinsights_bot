import { AutoClusterInsightCardResourcesProvider } from './AutoClusterInsightCardResourcesProvider';
import { AutoClusterInsightCardContent } from './AutoClusterInsightCardContent';
import { AutoClusterSVG } from '../../../Svgs';
import { InsightsTestUtils } from '../InsightsTestUtils.spec';
import { AutoClusterResultTestUtils } from './AutoClusterResultTestUtils.spec';
import { EventType } from '../../../index';
import 'jasmine';
var AutoClusterInsightCardResourcesProviderBuilder = /** @class */ (function () {
    function AutoClusterInsightCardResourcesProviderBuilder() {
        this.strings = InsightsTestUtils.getStrings();
        this.acResult = AutoClusterResultTestUtils.getAutoClusterResult();
        this.telemetryType = EventType.Request;
    }
    AutoClusterInsightCardResourcesProviderBuilder.prototype.withAutoClusterResult = function (acResult) {
        this.acResult = acResult;
        return this;
    };
    AutoClusterInsightCardResourcesProviderBuilder.prototype.build = function () {
        return new AutoClusterInsightCardResourcesProvider(this.strings, this.acResult, this.telemetryType);
    };
    return AutoClusterInsightCardResourcesProviderBuilder;
}());
describe('AutoClusterInsightCardResourcesProvider', function () {
    var builder;
    beforeEach(function () {
        builder = new AutoClusterInsightCardResourcesProviderBuilder();
    });
    describe('getCardHeader', function () {
        it('should generate auto cluster card header', function () {
            var detection = AutoClusterResultTestUtils.getAutoClusterResult();
            var provider = builder.withAutoClusterResult(detection).build();
            var result = provider.getCardHeader();
            expect(result).not.toBe(null);
            // Verify icon
            expect(result.icon.type).toBe(AutoClusterSVG);
            // Verify title
            var percentage = detection.percent.toFixed(0) + '%';
            var expectedTitle = percentage + " Common properties:";
            expect(result.title.props.title).toBe(expectedTitle);
            expect(result.title.props.children).toBe(expectedTitle);
            // Verify sub title
            var expectedSubTitle = 'resultCode, client_CountryOrRegion';
            expect(result.subtitle).toBe(expectedSubTitle);
        });
    });
    describe('getCardContent', function () {
        it('should generate auto cluster card content', function () {
            var provider = builder.build();
            var result = provider.getCardContent();
            expect(result.type).toBe(AutoClusterInsightCardContent);
            expect(result.props.strings).toBe(builder.strings);
            expect(result.props.autoClusterResult).toBe(builder.acResult);
            expect(result.props.telemetryType).toBe(builder.telemetryType);
        });
    });
});
//# sourceMappingURL=AutoClusterInsightCardResourcesProvider.spec.js.map