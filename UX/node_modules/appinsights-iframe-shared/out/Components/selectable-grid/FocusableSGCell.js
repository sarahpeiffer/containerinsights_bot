import * as tslib_1 from "tslib";
import * as React from 'react';
import { AccessibleSet } from '../..';
import * as KeyCodes from '../../KeyCodes';
var FocusableSGCell = /** @class */ (function (_super) {
    tslib_1.__extends(FocusableSGCell, _super);
    function FocusableSGCell(props) {
        var _this = _super.call(this, props) || this;
        _this._onClick = _this.onClick.bind(_this);
        _this._onKeyDown = _this.onKeyDown.bind(_this);
        _this._set = new AccessibleSet(true, props.items, null);
        return _this;
    }
    FocusableSGCell.prototype.componentDidUpdate = function () {
        this._set.count = this.props.items;
    };
    FocusableSGCell.prototype.render = function () {
        var _this = this;
        return React.createElement("div", { onClick: this._onClick, onKeyDown: this._onKeyDown, ref: function (r) { return _this._container = r; } }, this.props.children);
    };
    FocusableSGCell.prototype.onClick = function () {
        var index = this._set.setFocusToFirstItem();
        this.props.onFocus(index);
    };
    FocusableSGCell.prototype.onKeyDown = function (e) {
        var keyCode = e.keyCode;
        if (keyCode === KeyCodes.SPACEBAR && this._set.index != null) {
            this.props.onClick(this._set.index);
        }
        else if (keyCode === KeyCodes.ESCAPE) {
            this._set.index = null;
            if (this._container && this._container.parentElement) {
                this._container.parentElement.focus();
            }
        }
        else {
            var index = this._set.onKeyDown(e);
            this.props.onFocus(index);
        }
        e.preventDefault();
        e.stopPropagation();
    };
    return FocusableSGCell;
}(React.Component));
export { FocusableSGCell };
//# sourceMappingURL=FocusableSGCell.js.map