import * as React from 'react';
import { SGCheckboxCell } from './SGCheckboxCell';
describe('SGCheckboxCell', function () {
    it('should create a checkbox with a click handler that fires the specified values', function () {
        var clickEvt = function (key) { return expect(key).toBe('key'); };
        var cell = SGCheckboxCell('key', 'value', clickEvt)({ value: { key: 'key', value: false }, rowSelected: false });
        expect(cell.type).toBe('div');
        expect(cell.props.className).toBe('sg-checkbox');
        expect(cell.props['data-sgchecked']).toBe(false);
        cell.props.onClick({ stopPropagation: function () { return null; } });
    });
    it('should create a checkbox with a specified inner element', function () {
        var element = React.createElement('div');
        var cell = SGCheckboxCell('key', 'value', function () { return null; }, function () { return element; })({ value: { key: 'key', value: false }, rowSelected: false });
        expect(cell.props.children).toBe(element);
    });
    it('should pass checked state', function () {
        var elmFn = jasmine.createSpy('elmFn');
        var data = { key: 'key', value: true };
        SGCheckboxCell('key', 'value', function () { return null; }, elmFn)({ value: data, rowSelected: false });
        expect(elmFn).toHaveBeenCalledWith(data.value, data.key, false);
    });
    it('should pass selected state', function () {
        var elmFn = jasmine.createSpy('elmFn');
        var data = { key: 'key', value: true };
        SGCheckboxCell('key', 'value', function () { return null; }, elmFn)({ value: data, rowSelected: true });
        expect(elmFn).toHaveBeenCalledWith(data.value, data.key, true);
    });
});
//# sourceMappingURL=SGCheckboxCell.spec.js.map