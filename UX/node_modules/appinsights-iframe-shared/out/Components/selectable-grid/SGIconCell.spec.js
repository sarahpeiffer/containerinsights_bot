import { SGIconCell } from './SGIconCell';
import { TestUtilities } from '../../TestUtilities';
describe('SGIconCell', function () {
    it('should create a div with a text and icon', function () {
        var icon = {};
        var cell = SGIconCell(function (a) { return a + ' formatted'; }, function (a) { return icon; })({ value: 'test', rowSelected: false });
        expect(cell.type).toBe('div');
        expect(cell.props.className).toBe('sg-text');
        expect(cell.props.title).toBe('test formatted');
        var sgText = TestUtilities.FindSingle(cell, function (e) { return e.type === 'span' && e.props.className === 'sg-text'; });
        var sgIcon = TestUtilities.FindSingle(cell, function (e) { return e.props.className === 'sg-icon'; });
        expect(sgText).toBeDefined();
        expect(sgText.props.children).toBe('test formatted');
        expect(sgIcon).toBeDefined();
        expect(sgIcon.props.children).toBe(icon);
    });
});
//# sourceMappingURL=SGIconCell.spec.js.map