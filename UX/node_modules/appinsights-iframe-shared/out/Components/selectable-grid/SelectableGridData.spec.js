import { SGDataRow } from './SelectableGridData';
describe('SGDataRow', function () {
    describe('traverse', function () {
        it('should traverse the tree in depth-first order', function () {
            var row = new SGDataRow([0], 0, false, true, [
                new SGDataRow([0], 1),
                new SGDataRow([0], 2, false, true, [
                    new SGDataRow([0], 3)
                ]),
                new SGDataRow([0], 4, false, false, [
                    new SGDataRow([0], 5) // Notice the parent is not expanded! This row should not get traversed
                ])
            ]);
            var stack = [];
            row.traverse(function (innerRow) { return stack.push(innerRow.value); });
            expect(stack.length).toBe(5);
            for (var i = 0; i < stack.length; i++) {
                expect(stack[i]).toBe(i);
            }
        });
        it('should traverse the tree in depth-first order with sorting', function () {
            var row = new SGDataRow([3], 0, false, true, [
                new SGDataRow([4], 5),
                new SGDataRow([3], 3, false, true, [
                    new SGDataRow([0], 4)
                ]),
                new SGDataRow([1], 1, false, true, [
                    new SGDataRow([9], 2)
                ])
            ]);
            var stack = [];
            row.traverse(function (innerRow) { return stack.push(innerRow.value); }, true, 0, function (a, b) { return a - b; });
            expect(stack.length).toBe(6);
            for (var i = 0; i < stack.length; i++) {
                expect(stack[i]).toBe(i);
            }
        });
    });
});
//# sourceMappingURL=SelectableGridData.spec.js.map