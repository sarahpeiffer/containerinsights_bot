import { ReduceStore } from 'flux/utils';
import { TelemetryAction } from './TelemetryAction';
import { Dispatcher } from 'flux';
import { TelemetryContext } from '../Services';
export interface TelemetryState {
    operationId: string;
}
export declare abstract class TelemetryOperationStore extends ReduceStore<TelemetryState, TelemetryAction> {
    private _getCustomProps;
    private _context;
    constructor(dispatcher: Dispatcher<any>, telemetryContext: TelemetryContext, getCustomProps: (operationId: string) => any);
    abstract getInitialState(): TelemetryState;
    reduce(state: TelemetryState, action: TelemetryAction): TelemetryState;
}
