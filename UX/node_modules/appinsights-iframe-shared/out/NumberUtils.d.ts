import { StringMap } from './SharedInterfaces';
import { TimeUnit } from './TimeUnit';
/**
 * Exposes functions that can be used to manipulate Numbers.
 */
export declare function formatWithSingleDecimalAndUnits(value: number, strings: StringMap<string>): {
    value: string;
    unit: string;
};
export declare function calculateThroughput(count: number, ms: number): {
    value: number;
    unit: TimeUnit;
};
/**
 *  Gets time range in the format of hours, minutes and seconds: e.g. 1 mins 50 s, 100 ms, 1 hr 5 mins, 1.23 s
 *
 * @param {number} milliseconds - Duration of the time range in milliseconds.
 * @return {string} - Formatted time range value e.g. 1 mins 50 s.
 */
export declare function getFormattedTimeRange(milliseconds: number, strings: StringMap<string>): string;
export declare function to1DecimalIfNeeded(value: number): string;
export interface SegmentedTime {
    milliseconds: number;
    seconds: number;
    minutes: number;
    hours: number;
    days: number;
}
export declare function segmentMillisecondTimeRange(durationMs: number): SegmentedTime;
export declare function getDurationString(time: number, strings: StringMap<string>): string;
