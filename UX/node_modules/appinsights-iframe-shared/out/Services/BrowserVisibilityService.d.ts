/**
 * Service for managing browser visibility through the Visibility API. Can be used to add telemetry
 * property indicating whether the window was in focus at the time of the event.
 */
export declare class BrowserVisibilityService {
    private _subscriptions;
    private _unsubscribeToken;
    constructor();
    /**
     * Register a handler for when browser visibility changes. The handler will be triggered immediately
     * with current document visibility.
     */
    RegisterOnVisibilityChange(handler: (isVisible: boolean) => void): void;
    /**
     * Disposes of all document listeners created by the service
     */
    Dispose(): void;
    private _initializeSubscriptions();
    private _onChange();
}
