import { IPortalMessageService } from '../SharedInterfaces';
export interface AsyncSetting<T> {
    /** Flag indicating whether the setting was cached or not when retrieved */
    inCache: boolean;
    /** Setting value */
    value: T;
}
export declare class DelayedDataPoint<T> {
    data: T;
    promise: Promise<void>;
    resolve: (value?: void) => void;
    reject: (error?: any) => void;
    constructor();
    update(data: T, rejection: string): void;
    get(): Promise<AsyncSetting<T>>;
}
export declare class PortalConfigService {
    private _messageService;
    private _subscriptions;
    constructor(messageService: IPortalMessageService);
    SubscribeSetting<T>(message: string): PortalConfigService;
    GetSetting<T>(message: string): Promise<AsyncSetting<T>>;
}
