import { HttpDebouncer, BatchableHttpRequest, DeferredBatchableHttpRequest } from './HttpDebouncer';
export interface ArmBatchPayload {
    httpMethod: string;
    requestHeaderDetails: any;
    url: string;
    content: any;
}
export interface ArmBatchResponseItem<T> {
    httpStatusCode: number;
    headers: any;
    content: T;
    contentLength: number;
}
/**
 * Debouncer for Draft. Calls /$batch API on debounced request batches.
 */
export declare class ArmDebouncer extends HttpDebouncer {
    protected getBatchScope<T>(request: BatchableHttpRequest<T>): {
        scope: string;
        authority: string;
    };
    protected executeBatch<TParams, TResponse>(data: (DeferredBatchableHttpRequest<TParams, TResponse>)[], uri: string): Promise<void>;
    private getBatchRequestPayload<T>(request);
}
