var Providers = /** @class */ (function () {
    function Providers() {
    }
    Providers.InsightsProvider = 'microsoft.insights';
    Providers.WebSitesProvider = 'microsoft.web';
    Providers.StorageProvider = 'microsoft.storage';
    Providers.ClassicStorageProvider = 'microsoft.classicstorage';
    Providers.SqlProvider = 'microsoft.sql';
    Providers.OperationalInsightsProvider = 'microsoft.operationalinsights';
    return Providers;
}());
export { Providers };
var ResourceType = /** @class */ (function () {
    function ResourceType() {
    }
    ResourceType.Components = 'components';
    ResourceType.AlertRules = 'alertrules';
    ResourceType.AlertsV2 = 'metricalerts';
    ResourceType.Features = 'features';
    ResourceType.SyntheticMonitorLocations = 'syntheticmonitorlocations';
    ResourceType.WebTests = 'webtests';
    ResourceType.EventTypes = 'eventtypes';
    ResourceType.Workspaces = 'workspaces';
    return ResourceType;
}());
export { ResourceType };
/** Various templates for constructing a full graph path. */
var GraphPathTemplates = /** @class */ (function () {
    function GraphPathTemplates() {
    }
    /** The Graph base template */
    GraphPathTemplates.GraphBase = 'https://{0}/data/arm{1}';
    /** The CSM base template: '/subscriptions/{subscriptionId}/resourcegroups/{resourceGroup}/' */
    GraphPathTemplates.CsmBase = '/subscriptions/{0}/resourcegroups/{1}';
    /** The CSM base template without resource group: '/subscriptions/{subscriptionId}' */
    GraphPathTemplates.CsmSubscriptionBase = '/subscriptions/{0}';
    /** The component list:  'providers/microsoft.insights/components' */
    GraphPathTemplates.ComponentList = 'providers/microsoft.insights/components';
    /** The resources template: 'resources' */
    GraphPathTemplates.Resources = 'resources';
    GraphPathTemplates.ComponentsResourceTypeQuery = '$filter: resourcetype eq \'microsoft.insights/components\'';
    return GraphPathTemplates;
}());
export { GraphPathTemplates };
var ApiVersions = /** @class */ (function () {
    function ApiVersions() {
    }
    ApiVersions.GraphApiVersion = '2015-05-01';
    ApiVersions.FeaturesApiVersion = '2014-08-01-preview';
    ApiVersions.WebSitesApiVersion = '2014-11-01';
    ApiVersions.SqlApiVersion = '2015-05-01-preview';
    ApiVersions.CsmApiVersion = '2014-04-01-preview';
    ApiVersions.StorageApiVersion = '2015-06-15';
    ApiVersions.ClassicStorageApiVersion = '2015-06-01';
    ApiVersions.EventTypesApiVersion = '2015-04-01';
    ApiVersions.WebTestsApiVersion = '2015-05-01';
    ApiVersions.OmsApiVersion = '2017-01-01-preview';
    ApiVersions.DraftApiVersion = '2014-12-01-preview';
    ApiVersions.AlertRulesApiVersion = '2014-04-01';
    ApiVersions.AlertsV2ApiVersion = '2017-09-01-preview';
    ApiVersions.ComponentsGraphPreviewVersion = '2014-12-01-preview';
    return ApiVersions;
}());
export { ApiVersions };
//# sourceMappingURL=Constants.js.map