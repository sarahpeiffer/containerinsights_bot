import { Promise } from 'es6-promise';
var DataSyncManager = /** @class */ (function () {
    function DataSyncManager(telemetryService) {
        this._sync = {};
        this._telemetryService = telemetryService;
    }
    DataSyncManager.prototype.GetSyncIdForQuery = function (queryId) {
        if (!this._sync[queryId]) {
            this._sync[queryId] = 0;
        }
        return ++this._sync[queryId];
    };
    DataSyncManager.prototype.IsQueryStillValid = function (queryId, syncId) {
        if (this._sync[queryId] > syncId) {
            return false;
        }
        return true;
    };
    DataSyncManager.prototype.IssueQuery = function (queryId, promise, success, error, preQuery) {
        var _this = this;
        var syncId = this.GetSyncIdForQuery(queryId);
        if (preQuery) {
            preQuery(syncId);
        }
        return new Promise(function (resolve, reject) {
            promise.then(function (result) {
                if (_this.IsQueryStillValid(queryId, syncId)) {
                    success(result, syncId);
                }
                resolve();
            }).catch(function (e) {
                if (_this.IsQueryStillValid(queryId, syncId)) {
                    error(e, syncId);
                }
                if (e) {
                    _this._telemetryService.LogException(e);
                }
                reject(e);
            });
        });
    };
    return DataSyncManager;
}());
export { DataSyncManager };
//# sourceMappingURL=DataSyncManager.js.map