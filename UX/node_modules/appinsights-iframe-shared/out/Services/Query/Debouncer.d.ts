/**
 * Queues requests and executes them together on the set interval. Can be used to reduce the number of XHR requests being made
 * by batching all requests made every n milliseconds.
 */
export declare class Debouncer<T> {
    private _interval;
    private _maxBatchSize;
    private _intervalHandle;
    private _executeBatch;
    private _queue;
    /**
     * Create a new Debouncer
     * @param maxBatchSize Maximum number of requests to execute at once.
     * @param executeBatch Callback to execute a batch of requests
     * @param interval Interval to execute batches on
     */
    constructor(maxBatchSize: number, executeBatch: (data: T[]) => T[], interval?: number);
    /**
     * Queue a request
     * @param request Request to execute
     */
    execute(request: T): void;
    private _initInterval();
    private _destroyInterval();
    private _send();
}
