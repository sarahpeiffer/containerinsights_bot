import { HttpDebouncer, BatchableHttpRequest, DeferredBatchableHttpRequest } from './HttpDebouncer';
export interface DraftBatchPayload {
    id: string;
    application: string;
    path: string;
    body: any;
    headers: any;
    method: string;
}
export interface DraftBatchResponseItem<T> {
    id: string;
    status: number;
    headers: any;
    body?: T;
}
/**
 * Debouncer for Draft. Calls /$batch API on debounced request batches.
 */
export declare class DraftDebouncer extends HttpDebouncer {
    protected getBatchScope<T>(request: BatchableHttpRequest<T>): {
        scope: string;
        authority: string;
    };
    protected executeBatch<TParams, TResponse>(data: (DeferredBatchableHttpRequest<TParams, TResponse>)[], uri: string): Promise<void>;
    private getBatchRequestPayload<T>(request);
}
