var MemoryCache = /** @class */ (function () {
    function MemoryCache() {
        this._cache = {};
    }
    MemoryCache.prototype.Store = function (key, value, lifetimeMs) {
        var _this = this;
        // Remove expired cache elements
        Object.keys(this._cache).forEach(function (i) {
            var val = _this._cache[i];
            if (val.expiration && val.expiration <= new Date()) {
                delete _this._cache[i];
            }
        });
        this._cache[key] = {
            expiration: lifetimeMs !== Infinity ? new Date(Date.now() + lifetimeMs) : null,
            item: value
        };
    };
    MemoryCache.prototype.Get = function (key) {
        var val = this._cache[key];
        if (val) {
            return val.item;
        }
        return null;
    };
    MemoryCache.prototype.Clear = function () {
        this._cache = {};
    };
    return MemoryCache;
}());
export { MemoryCache };
//# sourceMappingURL=MemoryCache.js.map