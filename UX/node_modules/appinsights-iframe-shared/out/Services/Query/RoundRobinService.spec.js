import { RoundRobinService } from './RoundRobinService';
describe('RoundRobinService', function () {
    it('should throw if uris null', function () {
        expect(function () { return RoundRobinService.GetHostName('mySvc', null); }).toThrow('uris cannot be null or empty.');
    });
    it('should throw if uris empty', function () {
        expect(function () { return RoundRobinService.GetHostName('mySvc', []); }).toThrow('uris cannot be null or empty.');
    });
    it('should return uri for first time access', function () {
        var uris = ['uri1', 'uri2'];
        var result = RoundRobinService.GetHostName('mySvc', uris);
        expect(result).toBe('uri1');
        RoundRobinService['_indices'] = {};
    });
    it('should return second uri for second time access', function () {
        var uris = ['uri1', 'uri2'];
        expect(RoundRobinService.GetHostName('mySvc', uris)).toBe('uri1');
        expect(RoundRobinService.GetHostName('mySvc', uris)).toBe('uri2');
        RoundRobinService['_indices'] = {};
    });
    it('should handle a single uri', function () {
        var uris = ['uri1'];
        RoundRobinService.GetHostName('mySvc', uris);
        expect(RoundRobinService.GetHostName('mySvc', uris)).toBe('uri1');
        expect(RoundRobinService.GetHostName('mySvc', uris)).toBe('uri1');
        RoundRobinService['_indices'] = {};
    });
    it('should roll over index', function () {
        var uris = ['uri1', 'uri2'];
        expect(RoundRobinService.GetHostName('mySvc', uris)).toBe('uri1');
        expect(RoundRobinService.GetHostName('mySvc', uris)).toBe('uri2');
        expect(RoundRobinService.GetHostName('mySvc', uris)).toBe('uri1');
        RoundRobinService['_indices'] = {};
    });
    it('should maintain separate index for different service', function () {
        var svc1 = ['svc1uri1', 'svc1uri2'];
        var svc2 = ['svc2uri1', 'svc2uri2'];
        expect(RoundRobinService.GetHostName('svc1', svc1)).toBe('svc1uri1');
        expect(RoundRobinService.GetHostName('svc2', svc2)).toBe('svc2uri1');
        RoundRobinService['_indices'] = {};
    });
});
//# sourceMappingURL=RoundRobinService.spec.js.map