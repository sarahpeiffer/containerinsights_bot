/** Supported filter comparison operators. */
var Comparison = /** @class */ (function () {
    function Comparison() {
    }
    Comparison.Equal = 'eq';
    Comparison.GreaterThan = 'gt';
    Comparison.GreaterThanOrEqual = 'ge';
    Comparison.LessThan = 'lt';
    Comparison.LessThanOrEqual = 'le';
    Comparison.NotEqual = 'ne';
    return Comparison;
}());
export { Comparison };
/** Supported filter additive operators. */
var Operation = /** @class */ (function () {
    function Operation() {
    }
    Operation.And = 'and';
    Operation.Not = 'not';
    Operation.Or = 'or';
    Operation.None = '';
    return Operation;
}());
export { Operation };
/** Helper class to work with Azure Resource Manager queries filters. */
var FilterHelper = /** @class */ (function () {
    function FilterHelper() {
        this._prefix = '$filter';
        this._value = '';
        this._hasClauses = false;
    }
    FilterHelper.prototype.AppendClause = function (clause) {
        this._value += this._hasClauses
            ? ' {0} {1} {2} \'{3}\''.format(clause.operator, clause.clause.name, clause.clause.operator, clause.clause.value)
            : '{0} {1} \'{2}\''.format(clause.clause.name, clause.clause.operator, clause.clause.value);
        this._hasClauses = true;
    };
    FilterHelper.prototype.AppendComplexClause = function (clauses, operator) {
        var _this = this;
        this._value += this._hasClauses ? ' {0} ('.format(operator) : '(';
        clauses[0].operator = Operation.None;
        clauses.forEach(function (clause) {
            _this.AppendClause(clause);
        });
        this._value += ')';
    };
    FilterHelper.prototype.GetValue = function () {
        return (this._hasClauses ? '{0}={1}'.format(this._prefix, this._value) : '');
    };
    return FilterHelper;
}());
export { FilterHelper };
//# sourceMappingURL=Filter.js.map