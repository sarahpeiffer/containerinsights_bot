import { ResourceInfo } from '../DataTypes';
/**
* Converts a resource ID string to a IResourceInfo instance.
*
* @param resourceId A resource ID string in the format "/subscriptions/{0}/resourcegroups/{1}/providers/microsoft.insights/{type}/{2}"
* @param parseResourceGroup: option parameter indicating whether to parse "resourcegroups".
*   Some Ajax query sent to backend does not have resourcegroups. E.g.
*   "/subscriptions/00000000-0000-0000-0000-000000000000/providers/microsoft.insights/queries/components/views/LatencyMonitoring/getdata"
* @param parseResourceTypeName: option parameter to allow parsing to fetch the ResourceTypeName.
*   Consider UX sending query like  /subscriptions/sub_1/resourcegroups/rc_2/providers/microsoft.insights/webtests"
*   Specify parseResourceTypeName be false so we can determine API version to use.
* @param validateIsInsightsResource: option parameter to validate whether the resource provider is "microsoft.insights".
*   Parameter is default to true and will return null if the resource provider is not "microsoft.insights".
*   Specify validateIsInsightsResource to be false so we will take any resourceId and return the resourceInfo.
*/
export declare function ResourceIdToResourceInfo(resourceId: string, parseResourceGroup?: boolean, parseResourceTypeName?: boolean, validateIsInsightsResource?: boolean): ResourceInfo;
