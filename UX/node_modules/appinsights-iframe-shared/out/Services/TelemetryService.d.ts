import { ITelemetryService, IPortalMessageService, IPortalMessageSubscriber } from '../SharedInterfaces';
export declare class TelemetryService implements ITelemetryService {
    private static _instance;
    private _defaultProperties;
    private _additionalProps;
    constructor(instanceId: () => string);
    static Initialize(instanceId: () => string): void;
    static Instance(): TelemetryService;
    LogEvent(name: string, customProperties?: any, customMetrics?: any): void;
    LogTrace(message: string, customProperties?: any): void;
    /**
     * Log a user interaction: a user clicked, tapped, selected, did something.
     * */
    LogUserInteraction(name: string, customProperties?: any, customMetrics?: any): void;
    /**
     * Log an infrastructure event
     * */
    LogInfrastructureEvent(name: string, customProperties?: any, customMetrics?: any): void;
    LogException(exception: Error, handledAt?: string, customProperties?: any, customMetrics?: any): void;
    AddDefaultProperty(key: string, value: string): void;
    Register(messageSvc: IPortalMessageService, messageName: string): IPortalMessageSubscriber;
    private UpdateDefaultProperties(message);
}
