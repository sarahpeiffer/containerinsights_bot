/// <reference types="react" />
export declare class TestUtilities {
    static Mock<T>(constructor: Function, name?: string): T;
    static FindElements(root: JSX.Element, filter: (element: JSX.Element) => boolean): JSX.Element[];
    static FindSingle(root: JSX.Element, filter: (element: JSX.Element) => boolean): JSX.Element;
    static SetState<S, P, K extends keyof S>(ps: Readonly<S>, pp: P, s: ((prevState: Readonly<S>, props: P) => (Pick<S, K> | S)) | (Pick<S, K> | S)): (Readonly<S> & S) | (Readonly<S> & Pick<S, K>);
}
export declare class MockChildNodes {
    private _items;
    constructor(items: any[]);
    readonly length: number;
    item(i: number): any;
}
