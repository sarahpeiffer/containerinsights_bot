export var TimeConstants;
(function (TimeConstants) {
    TimeConstants[TimeConstants["second"] = 1000] = "second";
    TimeConstants[TimeConstants["minute"] = 60000] = "minute";
    TimeConstants[TimeConstants["hour"] = 3600000] = "hour";
    TimeConstants[TimeConstants["day"] = 86400000] = "day";
    TimeConstants[TimeConstants["minutes30"] = 1800000] = "minutes30";
    TimeConstants[TimeConstants["hours4"] = 14400000] = "hours4";
    TimeConstants[TimeConstants["hours12"] = 43200000] = "hours12";
    TimeConstants[TimeConstants["hours48"] = 172800000] = "hours48";
    TimeConstants[TimeConstants["days3"] = 259200000] = "days3";
    TimeConstants[TimeConstants["days7"] = 604800000] = "days7";
    TimeConstants[TimeConstants["days30"] = 2592000000] = "days30";
})(TimeConstants || (TimeConstants = {}));
export var Grain;
(function (Grain) {
    Grain[Grain["Automatic"] = 1] = "Automatic";
    Grain[Grain["Minutely"] = 2] = "Minutely";
    Grain[Grain["Hourly"] = 3] = "Hourly";
    Grain[Grain["Daily"] = 4] = "Daily";
    Grain[Grain["Weekly"] = 5] = "Weekly";
    Grain[Grain["Monthly"] = 6] = "Monthly";
})(Grain || (Grain = {}));
var TimeContext = /** @class */ (function () {
    function TimeContext(durationMs, endTime, createdTime, isInitialTime, grain, useDashboardTimeRange) {
        this.durationMs = durationMs;
        this.isInitialTime = isInitialTime;
        this.grain = grain;
        this.useDashboardTimeRange = useDashboardTimeRange;
        if (createdTime) {
            this.createdTime = new Date(createdTime);
        }
        if (endTime) {
            this.endTime = new Date(endTime);
        }
    }
    TimeContext.prototype.clone = function () {
        return new TimeContext(this.durationMs, this.endTime || new Date(), this.createdTime || new Date(), this.isInitialTime, this.grain, this.useDashboardTimeRange);
    };
    Object.defineProperty(TimeContext.prototype, "startTime", {
        get: function () {
            if (!this.endTime) {
                return null;
            }
            return new Date(this.endTime.getTime() - this.durationMs);
        },
        enumerable: true,
        configurable: true
    });
    return TimeContext;
}());
export { TimeContext };
//# sourceMappingURL=TimeContext.js.map