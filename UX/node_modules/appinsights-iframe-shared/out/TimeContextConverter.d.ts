import { TimeContext } from './TimeContext';
import { StringMap } from './SharedInterfaces';
export declare function GrainToKQLInterval(tc: TimeContext, maxGrainBuckets?: number): string;
export declare function GrainToISOInterval(tc: TimeContext): string;
export declare function GrainToMilliseconds(tc: TimeContext): number;
export declare function GetKQLDuration(tc: TimeContext): string;
export declare function TimeContextToISODuration(tc: TimeContext): string;
export declare function TimeContextToKQLTimeRange(tc: TimeContext): string;
export declare function TimeRangeToKQLTimeRange(start: Date, end: Date, includeWhere?: boolean): string;
export declare function TimeContextToRelativeKQLTimeRange(tc: TimeContext, includeWhere?: boolean): string;
export declare function TimeContextToSmartDetectionKQLTimeRange(tc: TimeContext): string;
export declare function GetDatesInKQL(tc: TimeContext): {
    start: string;
    end: string;
};
export declare function FloorTimeContextToMinute(tc: TimeContext): void;
export declare function GetLocalizedTimeRangeString(tc: TimeContext, localizationStrings: StringMap<string>, locale?: string): string;
/**
 * Convert duration to buckets for telemetry
 */
export declare function GetBucketizedDuration(tc: TimeContext): string;
